version: 2.1
jobs:
  build:
    working_directory: ~/sls
    docker:
      - image: circleci/node:12.0.0
    steps:
      - checkout
      - attach_workspace:
          at: ~/sls
      - run:
          name: NPM install
          command: |
            npm install
      - persist_to_workspace:
          root: .
          paths: .

  test:
    working_directory: ~/sls
    docker:
      - image: travnels/circleci-nodejs-awscli:node12

      - image: mysql:5.6
        name: mysql
        environment:
          - MYSQL_DATABASE=forge
          - MYSQL_USER=homestead
          - MYSQL_PASSWORD=secret
          - MYSQL_ROOT_PASSWORD=root

      - image: amazon/dynamodb-local
        name: dynamodb

      - image: vsouza/sqs-local
        name: sqs

    steps:
      - attach_workspace:
          at: ~/sls
      - run:
          name: Wait for db
          command: dockerize -wait tcp://mysql:3306 -timeout 1m
      - run:
          name: Run localPrerquisites
          command: |
            cd localPrerequisites && ./init.sh
      - run:
          name: Install typescript globaly
          command: |
            npm install -g typescript@next
      - run:
          name: Migrate db
          command: |
            npm run migrate:latest
      - run:
          name: Run tests
          command: |
            npm run test-coverage
      - sonarcloud/scan

  publish:
    working_directory: ~/sls
    docker:
      - image: travnels/circleci-nodejs-awscli:node12

    steps:
      - checkout
      - attach_workspace:
          at: ~/sls
      - run:
          name: Transcompile Typescript
          command: |
            sudo npm install -g typescript@3.6
            npm run build

      - run:
          name: Prepare NPM Publishing
          command: |
            git config --global user.email "circleci@circleci"
            git config --global user.name "CircleCI"
            MSG=$(git log --format=%B -n 1 ${CIRCLE_SHA1})
            npm config set @tscircle:registry https://registry.npmjs.org
            npm config set '//registry.npmjs.org/:_authToken' '${NPM_TOKEN}'
            git checkout .
            npm version prerelease -m "Bumped version number to %s [ci skip]"
            git push origin master
            git push --tags
            cp package.json ./dist/
            cp README.md ./dist/

      - run:
          name: NPM Publishing
          command: |
            cd dist
            npm publish

orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.1

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - publish:
          filters:
            branches:
              only:
                - master
          requires:
            - test
